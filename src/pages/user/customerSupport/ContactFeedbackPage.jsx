import React, { useState } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
    faEnvelope,
    faPhone,
    faUser,
    faComments,
    faLocationDot,
    faPaperPlane,
    faHeart,
} from "@fortawesome/free-solid-svg-icons";

export default function ContactFeedbackPage() {
    // üß© Tr·∫°ng th√°i form
    const [form, setForm] = useState({
        name: "",
        email: "",
        message: "",
    });
    const [loading, setLoading] = useState(false);
    const [success, setSuccess] = useState(null);
    const [error, setError] = useState(null);

    // üß† H√†m x·ª≠ l√Ω thay ƒë·ªïi input
    const handleChange = (e) => {
        setForm({ ...form, [e.target.name]: e.target.value });
    };

    // üöÄ G·ª≠i form ƒë·∫øn BE
    const handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);
        setSuccess(null);
        setError(null);

        try {
            const response = await fetch(`${process.env.REACT_APP_API_URL}/feedback`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(form),
            });

            if (!response.ok) throw new Error("Kh√¥ng th·ªÉ g·ª≠i g√≥p √Ω. Vui l√≤ng th·ª≠ l·∫°i.");

            const data = await response.json();
            setSuccess(data.message || "G·ª≠i g√≥p √Ω th√†nh c√¥ng!");
            setForm({ name: "", email: "", message: "" });
        } catch (err) {
            setError(err.message);
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="container my-5">
            <div className="text-center mb-5">
                <h1 className="fw-bold text-primary mb-3">
                    <FontAwesomeIcon icon={faComments} className="me-2" />
                    Li√™n h·ªá & G√≥p √Ω
                </h1>
                <p className="text-muted fs-5">
                    H√£y chia s·∫ª v·ªõi ch√∫ng t√¥i nh·ªØng √Ω ki·∫øn, nh·∫≠n x√©t ho·∫∑c g√≥p √Ω c·ªßa b·∫°n v·ªÅ s·∫£n ph·∫©m, d·ªãch v·ª•,
                    nh√¢n vi√™n v√† c√°c ho·∫°t ƒë·ªông c·ªßa <strong>Kido</strong>.
                </p>
            </div>

            <div className="card border-0 shadow-sm p-4">
                <h4 className="fw-bold text-primary mb-4">
                    <FontAwesomeIcon icon={faPaperPlane} className="me-2" />
                    G·ª≠i g√≥p √Ω tr·ª±c tuy·∫øn
                </h4>

                <form onSubmit={handleSubmit}>
                    <div className="row g-3">
                        <div className="col-md-6">
                            <label className="form-label fw-semibold">
                                <FontAwesomeIcon icon={faUser} className="me-2" />
                                H·ªç v√† t√™n
                            </label>
                            <input
                                type="text"
                                name="name"
                                value={form.name}
                                onChange={handleChange}
                                className="form-control"
                                placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                                required
                            />
                        </div>
                        <div className="col-md-6">
                            <label className="form-label fw-semibold">
                                <FontAwesomeIcon icon={faEnvelope} className="me-2" />
                                Email
                            </label>
                            <input
                                type="email"
                                name="email"
                                value={form.email}
                                onChange={handleChange}
                                className="form-control"
                                placeholder="Nh·∫≠p email c·ªßa b·∫°n"
                                required
                            />
                        </div>
                        <div className="col-md-12">
                            <label className="form-label fw-semibold">
                                <FontAwesomeIcon icon={faComments} className="me-2" />
                                N·ªôi dung g√≥p √Ω
                            </label>
                            <textarea
                                name="message"
                                value={form.message}
                                onChange={handleChange}
                                className="form-control"
                                rows="5"
                                placeholder="Chia s·∫ª suy nghƒ©, g√≥p √Ω ho·∫∑c ph·∫£n h·ªìi c·ªßa b·∫°n..."
                                required
                            ></textarea>
                        </div>
                    </div>

                    {/* Tr·∫°ng th√°i ph·∫£n h·ªìi */}
                    <div className="text-center mt-4">
                        <button
                            type="submit"
                            className="btn btn-success px-4 py-2 shadow-sm"
                            disabled={loading}
                        >
                            <FontAwesomeIcon icon={faPaperPlane} className="me-2" />
                            {loading ? "ƒêang g·ª≠i..." : "G·ª≠i g√≥p √Ω"}
                        </button>
                    </div>

                    {success && (
                        <div className="alert alert-success mt-4 text-center">{success}</div>
                    )}
                    {error && <div className="alert alert-danger mt-4 text-center">{error}</div>}
                </form>
            </div>

            <div className="text-center mt-5 text-secondary">
                <FontAwesomeIcon icon={faHeart} className="text-danger fs-4 me-2" />
                <p className="d-inline fw-semibold">
                    Kido tr√¢n tr·ªçng m·ªçi √Ω ki·∫øn ƒë√≥ng g√≥p ‚Äì C·∫£m ∆°n b·∫°n ƒë√£ ƒë·ªìng h√†nh c√πng ch√∫ng t√¥i!
                </p>
            </div>
        </div>
    );
}
